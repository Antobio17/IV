# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python3.6.15:
      python.version: '3.6.15'
    Python3.8.12:
      python.version: '3.8.12'
    Python3.10.0:
      python.version: '3.10.0'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install poetry
  displayName: 'Instalar gestor de dependencias'

- script: |
    poetry config virtualenvs.create false
    poetry install
  displayName: 'Instalar dependencias'

- script: |
    invoke test
  displayName: 'Lanzar tests'